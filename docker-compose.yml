version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: senvia-postgres
    environment:
      POSTGRES_DB: senvia_niryat
      POSTGRES_USER: senvia_user
      POSTGRES_PASSWORD: senvia_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U senvia_user -d senvia_niryat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: senvia-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: senvia-backend
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://senvia_user:senvia_password@postgres:5432/senvia_niryat
      REDIS_URL: redis://redis:6379
      AI_SERVICE_URL: http://ai-services:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev

  # AI Services
  ai-services:
    build:
      context: ./ai-services
      dockerfile: Dockerfile
    container_name: senvia-ai
    ports:
      - "8000:8000"
    volumes:
      - ./ai-services:/app
      - /app/__pycache__
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (Development)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: senvia-frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:5000
      VITE_AI_SERVICE_URL: http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
